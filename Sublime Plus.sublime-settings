{

    // The full path to an executable to open when clicking the repository button in the status bar
    // none = use the default, which opens sublime merge
    // Example: "C:\\Users\\YOUR USERNAME HERE\\AppData\\Local\\GitHubDesktop\\GitHubDesktop.exe"
    "git_gui_path": "none",

    //SIDEBAR SETTINGS
    //I think these make the sidebar act more like it "should"

    // This option changes the behavior only when the sidebar is opened with the focus_file_on_sidebar command
    // If true it'll close sidebar and focus back on the current file (basically makes the command act as a sidebar toggle)
    // If false it'll reveal and focus the current file on sidebar (basically makes the command only open the sidebar)
    "close_sidebar_if_opened": true,

    // Sidebar Hover settings

    // Should the sidebar be shown when hovering over the gutter?
    "sidebar_toggle_on_hover": false,

    // 2 options:
    // open - just open the sidebar
    // open_and_focus - open and put focus on sidebar instead of the text buffer, selection will be restored when going back to view
    "sidebar_hover_open_mode": "open",

    // Ms delay to open the sidebar when hovering over the gutter
    "sidebar_hover_open_time": 325,

    // Ms delay to close the sidebar when hovering over the gutter
    "sidebar_hover_close_time": 250,

    // Should the sidebar be automatically hidden after hovering away?
    "sidebar_toggle_auto_hide": true,

    // Sidebar Hover settings end

    // This option will automatically hide the sidebar when the sidebar is no longer the main focus
    // If true sidebar will auto hide when something else becomes the focus
    // If false side bar will NOT auto hide when something else becomes the focus
    "hide_side_bar_when_not_focused": false,


    // Will the side bar automatically be shown when there are no open files(views)
    // If true sidebar will auto open when there are no open files
    // If false sidebar will auto open when there are no open files
    "show_sidebar_when_no_open_views": false,


    //Will the side bar be automatically closed after X changes have been made. Where X is change_count_sidebar_auto_close
    // If true sidebar will close after X changes
    // If false sidebar will not automatically close after changes
    "close_sidebar_after_changes": false,


    // How many changes have to be made before the sidebar is automatically closed if close_sidebar_after_changes is true
    "change_count_sidebar_auto_close": 15,


    // The amount of characters that will be moved when the fast move (alt+arrow keys) commands are used.
    // Bigger number = faster movement

    "fast_move_horizontal_character_amount": 10,

    "fast_move_vertical_move_amount": 10,

    // Should files be autosaved when the buffer is modified?
    "auto_save_on_modified": true,

    // The number of modifications that have to be made to trigger an auto save
    "number_of_modifications_for_auto_save": 1,

    // Should all folds in code be saved on save, if false folds only save on close.
    "save_folds_on_save": false,

    // How many ms after a modification has been made should autosave trigger?
    "auto_save_delay_in_seconds": 1000,

    // Should files with file extentions that are listed in included_auto_save_files_field be the only one's that use autosave?
    // Useful because hot reload and auto saves can cause problems for some projects but not others.
    "auto_save_only_included": true,

    // What file extentions should be ignored when auto saving? Only valid if auto_save_only_included is false
    "ignore_auto_save_files_field": [
        ".sublime-settings",
        ".sublime-menu",
        ".sublime-commands",
        ".sublime-keymap"
    ],

    // What file extentions should auto save be on for? Only valid if auto_save_only_included is true
    "included_auto_save_files_field": [
        ".cpp",
        ".c"
    ],

    // List of directories that contain sublime workspaces that will populate the open workspace command. Add as many directories as you want.
    // Can be very useful for quickly switching between sets of files via the command palette
    // Works in a similar way to the open_switch_project command but it is only filled with valid entries & is only workspaces.
    // Paths must be entered using double backward slashes like this: "C:\\Users\\yourusername\\Desktop\\Projects"
    // Also make sure that your default application to open .sublime-workspace files is set to sublime text.
    // Keybinding to open list of workspaces in directories is alt+w
    "sublime_workspace_directories_list": [
        // "C:\\Users\\yourusername\\Desktop\\Projects",
        // "C:\\Users\\yourusername\\Desktop\\test"
    ],


    // Line split command setting
    // Will the split selection be shown before or after it is done?
    // Default, true, is before

    "live_split_selection": true,

    //NotePad Settings, default is to show nothing in the notepad for as few distractions as possible

    "show_gutter_in_notepad": false,


    "show_minimap_in_notepad": false,


    "show_status_bar_in_notepad": false,


    "show_tabs_in_notepad": false,

    //What color scheme should the notepad use?
    // Dark and Light are special schemes just for the notepad to make note taking as simple and as distraction free as possible.
    // Dark = Use the dark notepad scheme
    // Light = Use the light notepad scheme
    // Default = Don't change the color scheme when making a new notepad, use the default one.

    "notepad_color_scheme_mode": "Default",


    //What color scheme should the temporary notepad use?
    // Dark and Light are special schemes just for the notepad to make note taking as simple and as distraction free as possible.
    // Dark = Use the dark notepad scheme
    // Light = Use the light notepad scheme
    // Default = Don't change the color scheme when making a new notepad, use the default one.

    "temp_notepad_color_scheme_mode": "Default",

    // The font size of the temp notepad. This is a setting because the output panel font can't be changed.
    "temp_notepad_font_size": 17,


    //Sets the draw_centered setting to true/false for the normal notepad
    "draw_centered_notepad": false,

    //Sets the draw_centered setting to true/false for the temporary notepad
    "draw_centered_temp_notepad": false,

    // Sort tabs settings
    // Automatically sort tabs when loading or saving a file.
    "sort_on_load_save" : false,

    // Command to use for automatic sort.
    // If not specified, it use the last used sorting command
    // Available defaults command are:
    //  sort_tabs_by_name
    //  sort_tabs_by_file_path
    //  sort_tabs_by_type
    //  sort_tabs_by_date
    "sort_on_load_save_command" : "sort_tabs_by_date",

    // Only sort current group (pane)
    "current_group_only" : false,

    // Rainbow bracket settings

    "rainbow_brackets_enabled": true, // For this to take effect you need to restart sublime

    "default_config": {
        "bracket_pairs": {
            "(": ")",
            "[": "]",
            "{": "}"
        },

        "coloring": false,

        "enabled": true,

        "ignored_scopes": [
            "comment",
            "string",
            "constant"
        ],

        // For this setting to update you will have to go into Packages/User and delete the "Color Schemes" folder and then restart sublime.
        "rainbow_colors": [
            "#ff3333", // level0
            "#FF6A00", // level1
            "#ffdd1a", // level2
            "#4dff4d", // level3
            "#0094FF", // level4
            "#0041FF", // level5
            "#8000ff"  // level6
        ],

        "mismatch_color": "#FF0000"
    },

    "syntax_specific": {
        "Bash": {
            "coloring": false,

            "ignored_scopes": "keyword"
        },

        "Pdx": {
            "bracket_pairs": {
                "(": ")",
                "{": "}",
                "[": "]"
            },
            "extensions": [
                ".gui",
                ".txt",
                ".shader",
                ".fxh"
            ],
            "ignored_scopes": [
                "comment"
            ]
        },

        "JSON": {
            "bracket_pairs": {
                "{": "}",
                "[": "]",
            },

            "extensions": [
                ".json",
                ".sublime-settings",
                ".sublime-menu",
                ".sublime-build",
                ".sublime-keymap",
                ".sublime-commands",
                ".sublime-theme",
                ".sublime-color-scheme"
            ],

            "ignored_scopes": [
                "comment", "string"
            ]
        },

        "Regular Expression": {
            "extensions": [
                ".sublime-syntax"
            ],

            "ignored_scopes": [
                "meta.set.regexp",
                "constant"
            ]
        },

        "Scheme": {
            "bracket_pairs": {
                "(": ")",
                "[": "]",
            },

            "extensions": [
                ".scm",
                ".ss"
            ],

            "ignored_scopes": [
                "comment", "string", "constant"
            ]
        }
    },


    // AUTOFOLD -------------------------------------------------------------

    // If the size of your view (number of characters in it) exceeds this number,
    // then AutoFoldCode will not save code folds (otherwise it risks hanging and
    // slowing down your editing).
    "max_buffer_size": 1000000,

    // Should AutoFoldCode save and restore your selections inside the editor?
    "save_selections": true,

    // ATTENTION: DO NOT EDIT THESE 3 VALUES
    // INTERNAL STORAGE FOR AUTOFOLDCODE -----------------------------------------

    // Your code folds are stored in this value.
    "folds": {},

    // Saved selections if enabled.
    "selections": {},

    // ATTENTION: DO NOT EDIT THIS VALUE
    // This is used by AutoFoldCode to check the storage version format of your
    // folded code regions. If you edit this then you may lose your folds.
    "version": 1
}