%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Sublime Text Snippet Content
scope: source.sublime.snippet
hidden: true

variables:
  known_variables: |-
    (?x:
      PARAM\d+
    | SELECTION
    | TM_CURRENT_LINE
    | TM_CURRENT_WORD
    | TM_FILENAME
    | TM_FILEPATH
    | TM_FULLNAME
    | TM_LINE_INDEX
    | TM_LINE_NUMBER
    | TM_SELECTED_TEXT
    | TM_SOFT_TABS
    | TM_TAB_SIZE
    )

contexts:
  main:
    - include: carets

  carets:
    - match: \\[$\\]
      scope: constant.character.escape.snippet
    - match: \$(\{)
      scope: meta.text-substitution.snippet keyword.other.block.start.snippet
      captures:
        1: keyword.other.block.begin.snippet
      push: [inside_caret, caret_name]
    - match: \$(?=\w)
      scope: meta.text-substitution.snippet keyword.other.block.start.snippet
      push: caret_name
    - match: \$
      scope: invalid.illegal.unescaped-dollar.snippet

  caret_name:
    - match: (\d+(?!\w))|({{known_variables}})\b
      comment: |
        http://docs.sublimetext.info/en/latest/extensibility/snippets.html?highlight=snippet#environment-variables
        note that USER_NAME is always blank in ST, so we don't highlight it here
      captures:
        1: constant.numeric.snippet
        2: constant.language.snippet
      pop: true
    - match: \w+
      scope: meta.text-substitution.snippet constant.other.snippet
      pop: true

  inside_caret:
    - meta_scope: meta.text-substitution.snippet
    - match: \}
      scope: keyword.other.block.end.snippet
      pop: true
    - include: carets
    - match: ':'
      scope: keyword.operator.alternation.snippet
      push: inside_caret_alternation
    - match: /
      scope: keyword.other.regex.start.snippet
      push: inside_caret_pattern

  inside_caret_alternation:
    - meta_content_scope: string.unquoted.text-substitution.snippet
    - match: \\\}
      scope: constant.character.escape.snippet
    - include: carets
    - match: (?=\})
      pop: true

  inside_caret_pattern:
    - match: /
      scope: keyword.other.regex.mid.snippet
      set: inside_caret_replacement
    - match: ''
      embed: scope:source.regexp
      escape: (?<=[^\\]|\\\\)(?=/)

  inside_caret_replacement:
    - match: /
      scope: keyword.other.regex.end.snippet
      set:
        - match: '[gims-]*'  # x mode doesn't seem to work properly in snippets
          scope: constant.other.regex-modifier.snippet
        - match: (?=\})
          pop: true
        - match: '[^}]+'
          scope: invalid.illegal.unexpected-token.snippet
    - match: ''
      embed: scope:source.regexp-replacement
      escape: (?<=[^\\]|\\\\)(?=/)
