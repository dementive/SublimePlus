%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Sublime Text Mousemap (JSON)
file_extensions:
  - sublime-mousemap
scope: source.json.sublime.mousemap
contexts:
  main:
    - match: (?=\[)
      push: main-sequence
    - include: expect-sequence-rest

  main-sequence:
    - match: \[
      scope: punctuation.section.sequence.begin.json
      push:
        - meta_scope: meta.sequence.json meta.mousebinding.collection.sublime-mousemap
        - match: \]
          scope: punctuation.section.sequence.end.json
          set: only-comments
        - match: (?=\{)
          push: [in-sequence-expect-comma, mousemap-entry-pop]
        - include: comments
        - match: \S
          scope: invalid.illegal.expected-mapping.sublime-mousemap

  mousemap-entry-pop:
    - match: \{
      scope: punctuation.section.mapping.begin.json punctuation.section.mousebinding.begin.sublime-mousemap
      set:
        - meta_scope: meta.mapping.json
        - match: \}
          scope: punctuation.section.mapping.end.json punctuation.section.mousebinding.end.sublime-mousemap
          pop: true
        - match: (?=")
          push: [in-mapping-expect-comma, main-key]
        - include: expect-key-rest

  main-key:
    - clear_scopes: 1
    - match: (")(button)(")
      scope: meta.mapping.key.json meta.main-key.sublime-mousemap string.quoted.double.json
      captures:
        1: punctuation.definition.string.begin.json
        2: keyword.other.main.sublime-mousemap
        3: punctuation.definition.string.end.json
      set: [expect-button-string-value, expect-colon]
    - match: (")(modifiers)(")
      scope: meta.mapping.key.json meta.main-key.sublime-mousemap string.quoted.double.json
      captures:
        1: punctuation.definition.string.begin.json
        2: keyword.other.main.sublime-mousemap
        3: punctuation.definition.string.end.json
      set: [expect-modifiers-sequence-value, expect-colon]
    - match: (")((?:press_)?command)(")
      scope: meta.mapping.key.json meta.main-key.sublime-mousemap string.quoted.double.json
      captures:
        1: punctuation.definition.string.begin.json
        2: keyword.other.main.sublime-mousemap
        3: punctuation.definition.string.end.json
      set: [expect-command-name-value, expect-colon]
    - match: (")((?:press_)?args)(")
      scope: meta.mapping.key.json meta.main-key.sublime-mousemap string.quoted.double.json
      captures:
        1: punctuation.definition.string.begin.json
        2: keyword.other.main.sublime-mousemap
        3: punctuation.definition.string.end.json
      set: [expect-mapping-value, expect-colon]
    - match: (")(count)(")
      scope: meta.mapping.key.json meta.main-key.sublime-mousemap string.quoted.double.json
      captures:
        1: punctuation.definition.string.begin.json
        2: keyword.other.main.sublime-mousemap
        3: punctuation.definition.string.end.json
      set: [expect-number-value, expect-colon]
    - match: (")(\w*)(")
      scope: meta.mapping.key.json meta.main-key.sublime-mousemap string.quoted.double.json
      captures:
        1: punctuation.definition.string.begin.json
        # 2: invalid.unknown-key.sublime-mousemap
        3: punctuation.definition.string.end.json
      set: [expect-any-value, expect-colon]

  expect-button-string-value:
    - match: (?=")
      set: [mapping-value-meta, button-name-string-pop]
    - include: expect-string-rest

  button-name-string-pop:
    - clear_scopes: 1
    - match: (\")(?:(button(?:[1-9]|1[0-6])|scroll_(?:down|up)))(\")
      scope: meta.mapping.value.json string.quoted.double.json meta.button-name.sublime-mousemap
      captures:
        1: punctuation.definition.string.begin.json
        2: support.constant.button.named.sublime-mousemap
        3: punctuation.definition.string.end.json
      pop: true
    - match: \" # probably illegal button name
      scope: punctuation.definition.string.begin.json
      set:
        - clear_scopes: 1
        - meta_scope: meta.mapping.value.json string.quoted.double.json meta.button-name.sublime-mousemap
        - meta_content_scope: invalid.illegal.invalid-button.sublime-mousemap
        - match: \"
          scope: punctuation.definition.string.end.json
          pop: true
        - include: string-escape

  expect-modifiers-sequence-value:
    - match: (?=\[)
      set: [mapping-value-meta, modifiers-sequence-pop]
    - include: expect-sequence-rest

  modifiers-sequence-pop:
    - match: \[
      scope: punctuation.section.sequence.begin.json
      set:
        - meta_scope: meta.modifiers.sublime-mousemap meta.sequence.json
        - match: \]
          scope: punctuation.section.sequence.end.json
          pop: true
        - match: (\")(shift|ctrl|alt|super|button[1-5])(\")
          scope: string.quoted.double.json
          captures:
            1: punctuation.definition.string.begin.json
            2: support.function.modifier.key.sublime-mousemap
            3: punctuation.definition.string.end.json
          push:
            - include: comments
            - match: ","
              scope: punctuation.separator.sequence.modifiers.json
              pop: true
            - match: (?=\])
              pop: true
            - match: \S
              scope: invalid.illegal.expected-comma.sublime-mousemap
              pop: true
        - match: (\")(\w*)(\")
          scope: string.quoted.double.json
          captures:
            1: punctuation.definition.string.begin.json
            2: invalid.illegal.modifier.sublime-mousemap
            3: punctuation.definition.string.end.json
          push:
            - include: comments
            - match: ","
              scope: punctuation.separator.sequence.modifiers.json
              pop: true
            - match: (?=\])
              pop: true
            - match: \S
              captures:
                0: invalid.illegal.expected-comma.sublime-mousemap
              pop: true
        - include: comments
        - match: '[^\s\]\{\/,]+'
          scope: invalid.illegal.modifier.expected-string.sublime-mousemap
    - include: comments

  comments:
    - include: Sublime JSON.sublime-syntax#comments

  only-comments:
    - include: Sublime JSON.sublime-syntax#only-comments

  expect-colon:
    - include: Sublime JSON.sublime-syntax#expect-colon

  expect-string-rest:
    - include: Sublime JSON.sublime-syntax#expect-string-rest

  expect-key-rest:
    - include: Sublime JSON.sublime-syntax#expect-key-rest

  expect-sequence-rest:
    - include: Sublime JSON.sublime-syntax#expect-sequence-rest

  expect-mapping-value:
    - include: Sublime JSON.sublime-syntax#expect-mapping-value

  expect-number-value:
    - include: Sublime JSON.sublime-syntax#expect-number-value

  expect-command-name-value:
    - include: Sublime JSON.sublime-syntax#expect-command-name-value

  expect-any-value:
    - include: Sublime JSON.sublime-syntax#expect-any-value

  string-escape:
    - include: Sublime JSON.sublime-syntax#string-escape

  in-sequence-expect-comma:
    - include: Sublime JSON.sublime-syntax#in-sequence-expect-comma

  in-mapping-expect-comma:
    - include: Sublime JSON.sublime-syntax#in-mapping-expect-comma

  mapping-value-meta:
    - clear_scopes: 1  # remove `meta.mapping.json`
    - meta_scope: meta.mapping.value.json
    - match: ''
      pop: true
